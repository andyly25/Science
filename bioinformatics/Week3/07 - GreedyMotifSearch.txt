Test 0 # Sample Dataset (your code is not run on this dataset)
Input:
    3 5
    GGCGTTCAGGCA
    AAGAATCAGTCA
    CAAGGAGTTCGC
    CACGTCAATCAC
    CAATAATATTCG
Output:
    CAG
    CAG
    CAA
    CAA
    CAA

Test 1 # Check if you're returning the first occuring Profile-most probable kmer (in the case of a tie)
Input:
    3 4
    GCCCAA
    GGCCTG
    AACCTA
    TTCCTT
Output:
    GCC
    GCC
    AAC
    TTC

Test 2 # Check if you're missing the first kmer of each string in Dna
Input:
    5 8
    GAGGCGCACATCATTATCGATAACGATTCGCCGCATTGCC
    TCATCGAATCCGATAACTGACACCTGCTCTGGCACCGCTC
    TCGGCGGTATAGCCAGAAAGCGTAGTGCCAATAATTTCCT
    GAGTCGTGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTG
    GACGGCAACTACGGTTACAACGCAGCAACCGAAGAATATT
    TCTGTTGTTGCTAACACCGTTAAAGGCGGCGACGGCAACT
    AAGCGGCCAACGTAGGCGCGGCTTGGCATCTCGGTGTGTG
    AATTGAAAGGCGCATCTTACTCTTTTCGCTTTCAAAAAAA
Output:
    GAGGC
    TCATC
    TCGGC
    GAGTC
    GCAGC
    GCGGC
    GCGGC
    GCATC

Test 3 # Check if you're missing the last kmer of each string in Dna
Input:
    6 5
    GCAGGTTAATACCGCGGATCAGCTGAGAAACCGGAATGTGCGT
    CCTGCATGCCCGGTTTGAGGAACATCAGCGAAGAACTGTGCGT
    GCGCCAGTAACCCGTGCCAGTCAGGTTAATGGCAGTAACATTT
    AACCCGTGCCAGTCAGGTTAATGGCAGTAACATTTATGCCTTC
    ATGCCTTCCGCGCCAATTGTTCGTATCGTCGCCACTTCGAGTG
Output:
    GTGCGT
    GTGCGT
    GCGCCA
    GTGCCA
    GCGCCA

Test 4 # Check if you're not breaking ties properly
Input:
    5 8
    GACCTACGGTTACAACGCAGCAACCGAAGAATATTGGCAA
    TCATTATCGATAACGATTCGCCGGAGGCCATTGCCGCACA
    GGAGTCTGGTGAAGTGTGGGTTATGGGGCAGACTGGGAAA
    GAATCCGATAACTGACACCTGCTCTGGCACCGCTCTCATC
    AAGCGCGTAGGCGCGGCTTGGCATCTCGGTGTGTGGCCAA
    AATTGAAAGGCGCATCTTACTCTTTTCGCTTAAAATCAAA
    GGTATAGCCAGAAAGCGTAGTTAATTTCGGCTCCTGCCAA
    TCTGTTGTTGCTAACACCGTTAAAGGCGGCGACGGCAACT
Output:
    GCAGC
    TCATT
    GGAGT
    TCATC
    GCATC
    GCATC
    GGTAT
    GCAAC

Test 5 # Full dataset
Input:
    4 8
    GACCTACGGTTACAACGCAGCAACCGAAGAATATTGGCAA
    TCATTATCGATAACGATTCGCCGGAGGCCATTGCCGCACA
    GGAGTCTGGTGAAGTGTGGGTTATGGGGCAGACTGGGAAA
    GAATCCGATAACTGACACCTGCTCTGGCACCGCTCTCATC
    AAGCGCGTAGGCGCGGCTTGGCATCTCGGTGTGTGGCCAA
    AATTGAAAGGCGCATCTTACTCTTTTCGCTTAAAATCAAA
    GGTATAGCCAGAAAGCGTAGTTAATTTCGGCTCCTGCCAA
    TCTGTTGTTGCTAACACCGTTAAAGGCGGCGACGGCAACT
Output:
    CGCA
    CGCA
    GGAG
    GGCA
    GGCA
    CGCA
    GGTA
    GGCA

